--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bb)local bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp=120,50,33,52,30,73,86,49,21,13,92,96,21,34,40,69,47,20,63,32,13,10,32,53,51,19,15,22,77,17,25,30,60,95,36,67,30,66,94,89,70,43,89,86,70,79,64,49,63,61,54 while bb~=78 do if bc<=678 then if bc>=319 then if bc<=466 then if bc>=376 then if bc>=419 then if bc>422 then bz=math.floor bc=493 else do bl=math.abs end bc=466 end else bk=(function(bb,cq)if not(cg(bb)~='number')then return true else do return false end end end)bc=419 end else if bc<339 then by=select bc=348 else cg=type bc=376 end end else if bc>=622 then if bc>=642 then if bc>647 then ci={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,h,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,q,13,14,15,8,9,10,11,},{5,4,7,d,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,r,10,9,8,},{b,9,10,11,12,13,14,15,0,1,2,t,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,u,6,7,4,5,},{11,10,9,8,15,14,13,12,g,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,a,1,2,3,},{13,12,15,14,9,8,11,10,v,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}bc=697 else bc=678 cf=chfunction(a,b)return co[cn(a,16)]end)end else for a=0,255 do co[a]=ck(a);end bc=642 end else if bc>=538 then if bc<577 then cn=tonumber bc=584 else do co={}end bc=622 end else cb=(unpack or table.unpack)bc=538 end end end else if bc>=141 then if bc>=230 then if bc<=230 then bd=math.ldexp bc=260 else if bc<281 then bc=283 bj=(getfenv or function()return _ENV end)else bc=319 bo=setmetatable end end else if bc>=180 then if bc<192 then cc=table.concat bc=201 else do be=table.insert end bc=230 end else ca=string.rep bc=180 end end else if bc<=70 then if bc<63 then bc=70 bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp=nil else bc=92 do cp=string.byte end end else if bc<=92 then ck=string.char bc=107 else if bc<120 then bc=125 bi=string.sub else ch=string.gsub bc=141 end end end end end else if bc>=1033 then if bc<=1157 then if bc<=1057 then if bc<1050 then bf=function()local a,b a,b=cp(cf,cd,(cd+2))cd=(cd+2);return((b*256)+a);end bc=1057 else bn=function()local a,b,d,g,h,q,r,t=63,53,28,46,76,48,89,24,89,59,26,89,10,13,26,78,22,61 while a~=39 do if b>=217 then if b<=273 then if b>=241 then if b>244 then b=306 t=m else d=(bv(0,h,20)*4294967296+r)b=273 end else b=241 g=bv(20,h,11)end else if b>=334 then if b>336 then break else b=352 return(q*(2^(g-z))*(d/cm+t))end else if not(g~=0)then if 0~=d then g=1 t=0 else do return(q*0)end end elseif 2047~=g then else if not(d~=0)then do do return(q*(0/0))end end else do return(q*(1/i))end end end b=334 end end else if b>=121 then if b<=121 then h=bg()b=157 else if b<188 then do if((r==0 and h==0))then return 0 end end b=197 else b=217 q=((-1)^bv(31,h,1))end end else if b>60 then r=bg()b=121 else d,g,h,q,r,t=nil b=93 end end end end end bc=1077 end else if bc<=1077 then bc=1124 do bu=function(a,a,a,a)local a,b,d,g=63,52,16,74,31,69,88,11,84,27,86,68 while a~=32 do if b<=106 then if b>=78 then if b>86 then d=cf:sub(cd,(cd+g-1))b=122 else g=bg()b=106 end else d,g=nil b=78 end else if b<=122 then cd=(cd+g);b=160 else if b>167 then a=32;else b=207 return d;end end end end end end else if bc>1127 then bh={}bc=1178 else bc=1157 bw=function(...)return{...},by('#',...)end end end end else if bc<=1245 then if bc<=1178 then bc=1204 bt=function(a,b,b,b,b)local b,d,g,h,i,m,q,r=93,60,32,27,88,66,44,86,78,76,46,86,59,10,63,12,21,49,55,59,99,89,17,30,80 while b~=45 do if d<=266 then if d<=124 then if d<=78 then if d>62 then q={}d=109 else d=78 g,h,i,m,q,r=nil end else if d>118 then do h={}end d=156 else d=124 m={}end end else if d>=245 then if d>254 then d=288 h[167]=q;else d=266 for t=1,bg()do local u,v,z,bb,bd,be=82,37,21,98,66,96,28,60,16,20,72,59,84,62,91,88,47,29,69,43,55,28,34,12,94,78 while u~=53 do if v>=262 then if v>=358 then if v<=382 then if v<378 then bb[88]=bs(z,12,20);v=382 else do bb[174]=-bb[190]end v=413 end else if v<=413 then v=432 bb[121]=-bb[49]else if v<470 then v=477 q[t]=bb;else u=53;end end end else if v<=287 then if v>270 then v=325 bb[190]=bs(z,3,11);else v=287 bb[117]=bs(be,1,11);end else if v>334 then v=358 bb[49]=bs(z,21,29);else v=341 bb[l]=bs(be,12,33);end end end else if v<=126 then if v<=71 then if v>41 then do bb={{},nil,nil,nil}end v=111 else z,bb,bd,be=nil v=71 end else if v>113 then v=145 bb[60]={};else v=126 bb[165]=bm();end end else if v>=181 then if v<=181 then be=bg()v=222 else if v<245 then v=247 bd=bs(z,1,2)else bb[182]=bd v=262 end end else if v>153 then z=bg()v=181 else v=166 if not(bm()~=1)then do for l=1,bm()do do bb[60][l]={bm()==0,bg()}end end end end end end end end end end end else if d<193 then g=bg()d=196 else d=245 for l=(#bh+1),(#bh+g)do local g,q,t,u,v=67,74,46,26,93,84,72,39,70,70,70,38,91,73,16,27,29,78,22,29,90,20 while g~=35 do if q>=332 then if q>=459 then if q<=482 then if q>468 then q=506 t[121]=-t[49]else t[174]=-t[190]q=482 end else if q<546 then q=554 bh[l]=t;else break end end else if q>=405 then if q>413 then do t[189]=bs(u,12,33);end q=459 else q=436 t[49]=bs(v,21,29);end else if q>341 then t[127]=bs(v,12,20);q=405 else t[190]=bs(v,3,11);q=379 end end end else if q>=187 then if q>=271 then if q>277 then q=332 t[117]=bs(u,1,11);else q=300 t[182]=bs(v,1,2);end else if q>189 then t[88]=bm();q=271 else q=228 do u=bg()end end end else if q>=136 then if q<165 then do t[165]=bm();end q=171 else v=bg()q=187 end else if q<90 then t,u,v=nil q=99 else t={}q=136 end end end end end end end end end else if d<=378 then if d<=310 then if d<303 then d=310 for g=1,bg()do m[g-1]=bt();end else h[144]=m;d=357 end else if d>363 then do i=bg()end d=415 else d=378 h[94]=bm();end end else if d<=435 then if d<433 then d=435 r={}else for g=1,i do local i,l,m,q=84,53,95,99,75,43,41,51,52,18,64,54,63 while i~=43 do if l<=132 then if l>=95 then if l>100 then m=nil l=151 else q=bm()l=132 end else l=95 m,q=nil end else if l>=182 then if l<196 then l=198 r[g]=m;else i=43;end else if(not(q~=3))then m=(not(bm()==0));elseif(1==q)then m=bn();elseif(4==q)then m=bu();elseif(not(q~=2))then m=a[bu()];end;l=182 end end end end d=462 end else if d>=493 then if d<505 then d=514 do return h;end else b=45;end else h[73]=r d=493 end end end end end end else if bc<1238 then br={}bc=1245 else bc=1284 bx={}end end else if bc>=1326 then if bc<1363 then bc=1370 return bp(bt(bj()),{},bj())();else break end else bp=function(a,b,d,g,g,g)local g,h,i,l,m m=a[144]h=a[y]g=a[73]l=a[94]do i=br end return function(...)local a,i,q,r,t,u,v,y,z z=1 q=-1 u=-1 do a={}end y={...}v=(by('#',...)-1)i={}t={}for u=s,v do do if(not(u<l))then do a[(u-l)]=y[(u+1)];end else t[u]=y[(u+1)];end;end end;r=(v-l+j)while true do local j,r,s,u,bb,bd,be,bf,bi,bj bi=h[z]bb=bi[117]j=bi[165]bj=bi[190]s=bi[127]r=bi[49]bf=bi[88]u=bi[174]bd=bi[189]be=bi[121]if not(bi[117]>46)then do if not(bb<23)then do if not(bi[117]<35)then if not(bb>40)then if not(bb>37)then if not(bi[117]>35)then h[z]=bh[bf];z=bd;else if(bb<37)then t[bj][t[bd]]=t[r];else t[bj]();end end else if not(bb<39)then do if(bb>39)then g=br[bi[190]](g)else end end else h[z]={[c]=bb- -25,[88]=0,[189]=18,[49]=70,[190]=16};z=(z-1);end end else do if not(bb<44)then if not(bb<45)then if 45==bb then do t[bi[190]]=nil;end else br[bj]={}end else do do return t[u][bf]end end end else if not(bi[117]<42)then if(bb<43)then local c,j,bk j=bj do c=t[(j+2)]end bk=(t[j]+c)t[j]=bk;if((c>0))then while(bk<=t[j+1])do z=bi[189];t[j+3]=bk;break end elseif(not(bk<t[j+1]))then z=bd;t[(j+3)]=bk;end else local c,j,bk,bl bk=bi[190]do c={t[bk]()}end bl=r j=0 for bn=bk,bl do j=(j+1);t[bn]=c[j];end end else local c,j,bk,bl c=bj j,bk=bw(t[c](cb(t,(c+e),bd)))q=(bk+c-1)bl=0 for e=c,q do bl=(bl+1);t[e]=j[bl];end;end end end end else if not(bb<29)then if not(bb>31)then if not(bb>29)then local c,e e=bj c=t[bd]t[(e+1)]=c;t[e]=c[t[r]];else if not(bb~=30)then local c c=bj do do return cb(t,c,(c+bd))end;end else do if((g[bj]<t[r]))then do z=bd;end end;end end end else if not(bb<33)then if not(bi[117]~=33)then do t[bj]=t[bd];end elseif not t[r]then t[bj]=t[r];z=bd;end else local c c=bj t[c]=t[c](t[c+1]);end end else if not(bb>25)then if not(bi[117]<24)then if(bb>24)then z=((g[bj]<t[r])and bd or z)else do d[g[bi[189]]]=t[bj];end end else t[bj]=d[g[bi[189]]];end else if not(bi[117]<27)then if(bi[117]<28)then local c,e,j,bk,bl bl=bi[190]e=r c=(bl+p)bk={t[bl](t[bl+1],t[c])}for p=1,e do t[(c+p)]=bk[p]end j=t[(bl+3)]if j then do t[c]=j end else z=bd;end;else t[bi[190]]=br[s]end else t[bj]=(t[bd]-t[r]);end end end end end else if not(bb<n)then if not(bb<k)then if not(bb<20)then do if not(bb<21)then if not(bb~=21)then local c c=bj do return t[c](cb(t,(c+1),bd))end;else t[bj]=t[bd][t[r]];end else for c=bi[190],bd do t[c]=nil;end;end end else if not(bb<18)then if(bb<19)then q=bi[bj];else do t[bi[bj]]=t end end else t[bj]=bp(m[bd],nil,d);end end else if not(bb>13)then do if not(bb<12)then if(bb>12)then t[bj][g[bi[189]]]=g[bi[49]];else t[bj]=(t[bd]/g[r]);end else do d=t[bi[bj]]end end end else if not(bb<15)then do if(bb<16)then z=((g[bj]~=g[r])and bd or z)else t[bj]=g[r]~=t[bd];end end else do t[bj]={};end end end end else if not(bb>4)then if not(bb<2)then do if not(bi[117]<3)then if(bb<4)then do do return t[bj]();end end;else do t[bj]=t[bd]end end else do h[z]={[189]=5,[49]=0,[88]=0,[190]=3,[117]=bb- -21};end do z=(z-1);end end end else if(bb>0)then t[be]();else br[bj]=br[s]end end else do if not(bb>7)then if not(bb>5)then local c,e c=bi[190]e={}for j=1,#i do local k k=i[j]do for j=0,#k do local n,p,bk bk=k[j]n=bk[1]p=bk[2]if(n==t and p>=c)then e[p]=n[p];bk[1]=e;end;end;end end;else if(bb<7)then if((t[bj]<t[r]))then z=bd;end;else t[bj]=(t[bd]%t[r]);end end else if not(bb>8)then br[bi[190]]()else if(bb>9)then t[bj]=#t[bd];else if(not(t[bj]<t[r]))then z=bd;end;end end end end end end end end else if not(bb<70)then if not(bb<82)then if not(bb>87)then if not(bb<85)then if not(bb>85)then local c,e,j do c=bj end e=t[c]do j=t[(c+2)]end if((j>0))then if((e>t[c+f]))then z=bd;else do t[(c+3)]=e;end end elseif((e<t[c+1]))then z=bd;else t[(c+3)]=e;end else if(bb<87)then do br[bj]=t[s]end else local c do c=bj end t[c]=t[c](cb(t,c+1,bd));end end else if not(bb<83)then if 83==bi[117]then t[bj]=-t[bd];elseif t[bj]then z=bd;end else local c,e c=bj e=bd for f=c,e do t[f]=a[(f-c)];end;end end else if not(bb>90)then if not(bi[117]>88)then local a,c,e a=bj c={t[a](cb(t,a+1,bd))}e=0 for f=a,bi[49]do e=(e+x);t[f]=c[e];end else if not(bb~=89)then do t[bj]=d[g[bi[189]]][g[r]];end else local a,c a=bj c=t[bd]t[(a+1)]=c;t[a]=c[g[r]];end end else if not(bb>91)then t[bj]=(t[bd]+t[r]);else do if(bb<93)then local a,c,e c=bj e={t[c](t[c+1])}do a=0 end do for f=c,r do a=(a+1);t[f]=e[a];end end else if(not(t[bj]==g[r]))then z=bi[189];end;end end end end end else if not(bi[117]>75)then if not(bb>72)then if not(bb<71)then if(bb>ba)then t={};for a=0,v do if(a<l)then t[a]=y[(a+1)];else break end;end;else h[z]={[o]=55,[189]=2,[190]=29,[88]=0,[117]=bb-38};z=(z-1);end else do t[bi[190]]=t[bd][g[r]];end end else do if not(bb<74)then if not(bb~=74)then else t[bj]=(t[bd]/t[r]);end else t[bj]=(not(bd==0));z=(z+1);end end end else do if not(bb<w)then if not(bb>79)then local a,c a,c=bw(...)for c=1,bj do t[(c-1)]=a[c]end else if(bb>80)then t[bj]=(t[bd]^t[r]);else z=bi[189];end end else if not(bb<77)then if 77==bb then br=t else t[bj]=br[s]end else local a a={}while#i>0 do for c=1,#i do local c=i[c]for e=0,#c do local c=c[e]local e=c[1]local f=c[2]if e==t and f>=0 then a[f]=e[f]c[1]=a end end end break end return bb;end end end end end else if not(bb>57)then if not(bb<52)then if not(bb<55)then if not(bb>55)then b[bd]=t[bj];else if(bi[117]<57)then t[bj]=(t[bd]%g[r]);else do t[bi[190]]=(not t[bi[189]]);end end end else if not(bb>52)then t[bj]=(t[bd]*t[r]);else if not(bb~=53)then do z=((t[bj]<t[r])and bd or z)end else local a,c a=bi[190]c={}while#i>0 do for e=1,#i do local e=i[e]for f=0,#e do local e=e[f]local f=e[1]local i=e[2]if f==t and i>=0 then c[i]=f[i]e[1]=c end end end break end return cb(t,a,q);end end end else do if not(bi[117]>48)then if(bi[117]>47)then if((t[bj]>t[r]))then z=bd;end;else if bj then bj=false;r=bd;z=(z-1);else do z=(z+bd+r);end end end else if not(bb<50)then if(bb<51)then t[bj]=(t[bd]+g[r]);else local a a=bj t[a]=t[a](cb(t,a+1,q));end else t[bj]=b[bd];end end end end else if not(bb<64)then do if not(bi[117]>66)then do if not(bb>64)then local a a=t[bi[174]][bf]do t[u][bf]=(a..t[r]);end else if not(bb~=65)then do if not t[bj]then z=bd;end;end else t[be]=(function()t[bj]=bp(m[bi[127]],nil,d);end)end end end else if not(bb<68)then if(bb<69)then if(not(t[bj]==t[bi[49]]))then z=bd;end;else t[be]=(function()t[bj]=bp(m[s],nil,d);end)end else end end end else do if not(bb<61)then if not(bb>61)then local a,b,c,d do a=bj end do d=((r-1)*50)end c=t[a]b=bd for e=1,b do do c[(d+e)]=t[(a+e)]end end;else if not(bb~=62)then do return t[bi[190]]end else t[bj]=g[bi[189]]end end else do if not(bb>58)then t[bj]=(t[bd]*g[r]);else if not(bb~=59)then local a,b b=bd a=t[b]for c=(b+1),r do a=(a..t[c]);end;do t[bj]=a;end else do h[z]=bh[bf];end do z=bd;end end end end end end end end end end do z=(z+1);end end;end;end bc=1326 end end end else if bc<=839 then if bc>=747 then if bc>=790 then if bc<835 then cl=2 bc=839 else do for a=1,31 do do bq[a]=cl end cl=(cl*2)end end bc=868 end else bc=790 bq={[0]=1}end else if bc>701 then bc=747 do cm=(2^52)end else bc=717 do cj=''end end end else if bc>=929 then if bc>=976 then if bc<998 then bc=1000 do bg=function()local a,b,c,d d,b,a,c=cp(cf,cd,(cd+3))do cd=(cd+4);end return((c*16777216)+(a*65536)+(b*256)+d);end end else bc=1033 bm=function()local a a=cp(cf,cd,cd)cd=(cd+1);return a;end end else bc=976 cd=1 end else if bc>=888 then if bc<903 then ce=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,d=0,1 while a>0 and b>0 do local e,f=a%16,b%16 c=c+ci[e+1][f+1]*d a=(a-e)/16 b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)bc=912 else do bs=function(a,b,c,d)local d do d=((a/2^(b-1))%2^((c-1)-(b-1)+1))end return(d-d%1);end end bc=929 end else bv=function(a,b,c,d)local d,e,f=47,65,72,23,15,50,20,77,33,89,53,53 while d~=28 do if e<=148 then if e<=65 then e=101 f=nil else if e<144 then e=148 do f=nil end else f=((b/bq[a])%bq[c])e=194 end end else if e<=194 then e=214 do f=(f-f%1)end else if e<226 then e=229 return f else break end end end end end bc=888 end end end end end end end)(0,8,117,6,1,1,3,7,0,1,17,189,1,11,49,2,12,11,0,3,1,5,79,1,167,1023,71)